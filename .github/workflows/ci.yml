name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:
    inputs:
      make_release:
        description: 'True to make a release'
        required: true
        type: boolean

env:
  GO_VERSION: 1.24.5

jobs:
  # Build Job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "${{ vars.GO_VERSION }}"

      - name: Build
        run: go run ./build/build.go --target "Compile:All"

      - name: Test
        run: go run ./build/build.go --target "Test"

      - name: Upload Test Report
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: test-reports
          path: .test-reports/junit-test-report.xml

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-windows
          path: .build-output/*windows*.zip
          include-hidden-files: true

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-linux
          path: .build-output/*linux*.zip
          include-hidden-files: true

      - name: Upload Darwin Intel Artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-darwin-intel
          path: .build-output/*darwin*amd*.zip
          include-hidden-files: true

      - name: Upload Darwin ARM Artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-darwin-arm
          path: .build-output/*darwin*arm*.zip
          include-hidden-files: true

  # Release Job
  release:
    if: ${{ inputs.make_release }}
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: .build-output/
          pattern: binary-*
          merge-multiple: true

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "${{ vars.GO_VERSION }}"

      - name: Create the release
        run:  go run ./build/build.go --target "Release"
